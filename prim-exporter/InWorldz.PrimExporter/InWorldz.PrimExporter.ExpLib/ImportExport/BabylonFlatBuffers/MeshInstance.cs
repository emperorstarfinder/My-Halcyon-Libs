// automatically generated by the FlatBuffers compiler, do not modify

namespace InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers
{

using System;
using FlatBuffers;

public struct MeshInstance : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static MeshInstance GetRootAsMeshInstance(ByteBuffer _bb) { return GetRootAsMeshInstance(_bb, new MeshInstance()); }
  public static MeshInstance GetRootAsMeshInstance(ByteBuffer _bb, MeshInstance obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public MeshInstance __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Name { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(4); }
  public InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Vector3? Position { get { int o = __p.__offset(6); return o != 0 ? (InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Vector3?)(new InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Quaternion? RotationQuaternion { get { int o = __p.__offset(8); return o != 0 ? (InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Quaternion?)(new InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Quaternion()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Vector3? Scaling { get { int o = __p.__offset(10); return o != 0 ? (InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Vector3?)(new InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Vector3()).__assign(o + __p.bb_pos, __p.bb) : null; } }

  public static void StartMeshInstance(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(0, nameOffset.Value, 0); }
  public static void AddPosition(FlatBufferBuilder builder, Offset<InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Vector3> positionOffset) { builder.AddStruct(1, positionOffset.Value, 0); }
  public static void AddRotationQuaternion(FlatBufferBuilder builder, Offset<InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Quaternion> rotationQuaternionOffset) { builder.AddStruct(2, rotationQuaternionOffset.Value, 0); }
  public static void AddScaling(FlatBufferBuilder builder, Offset<InWorldz.PrimExporter.ExpLib.ImportExport.BabylonFlatBuffers.Vector3> scalingOffset) { builder.AddStruct(3, scalingOffset.Value, 0); }
  public static Offset<MeshInstance> EndMeshInstance(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MeshInstance>(o);
  }
};


}
